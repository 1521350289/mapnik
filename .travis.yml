language: c

sudo: false

git:
  depth: 10
  submodules: false

env:
  global:
   - secure: "N3a5nzzsgpuu45k8qWdYsHNxrSnqeAGLTOYpfYoAH7B94vuf7pa7XV1tQjXbxrnx2D6ryTdtUtyRKwy7zXbwXxGt4DpczWEo8f6DUd6+obAp3kdnXABg2Sj4oA7KMs0F0CmoADy0jdUZD5YyOJHu64LCIIgzEQ9q49PFMNbU3IE="
   - secure: "iQYPNpMtejcgYeUkWZGIWz1msIco5qydJrhZTSCQOYahAQerdT7q5WZEpEo3G6IWOGgO1eo7GFuY8DvqQjw1+jC9b9mhkRNdo3LhGTKS9Gsbl5Q27k0rjlaFZmmQHrfPlQJwhfAIp+KLugHtQw5bCoLh+95E3j0F0DayF1tuJ3s="
addons:
  postgresql: "9.4"
  apt:
    sources:
     - ubuntu-toolchain-r-test
     - llvm-toolchain-precise-3.6
    packages:
     - clang-3.6

cache:
  directories:
  - $HOME/.ccache

matrix:
  include:
    - os: linux
      compiler: clang
      env: JOBS=8 CXX="ccache clang++-3.6 -Qunused-arguments" CC="clang-3.6" MASON_PUBLISH=true BENCH=True
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6' ]
          packages: [ 'clang-3.6', 'libstdc++-4.9-dev', 'libstdc++6' ]
    # OOM killer knocking out build on render_markers_symbolizer.cpp
    #
    #- os: linux
    #  compiler: gcc
    #  env: JOBS=6 CXX="ccache g++-4.9" CC="gcc-4.9"
    #  addons:
    #    apt:
    #      sources: [ 'ubuntu-toolchain-r-test' ]
    #      packages: [ 'gcc-4.9', 'g++-4.9', 'libstdc++-4.9-dev', 'libstdc++6' ]
    - os: osx
      compiler: clang
      # https://docs.travis-ci.com/user/languages/objective-c/#Supported-OS-X-iOS-SDK-versions
      osx_image: xcode7.2 # upgrades clang from 6 -> 7
      env: JOBS=6 MASON_PUBLISH=true HEAVY_JOBS=3
    - os: osx
      compiler: clang
      osx_image: xcode7.2 # upgrades clang from 6 -> 7
      env: JOBS=6 COVERAGE=true HEAVY_JOBS=3

before_install:
 - export PYTHONUSERBASE=${PYTHONUSERBASE}
 - export PATH=${PYTHONUSERBASE}/bin:${PATH}
 - export COVERAGE=${COVERAGE:-false}
 - export MASON_PUBLISH=${MASON_PUBLISH:-false}
 - export BENCH=${BENCH:-false}
 - if [[ ${TRAVIS_BRANCH} != 'master' ]]; then export MASON_PUBLISH=false; fi
 - if [[ ${TRAVIS_PULL_REQUEST} != 'false' ]]; then export MASON_PUBLISH=false; fi
 - git submodule update --init --depth=10 ||
     git submodule foreach 'test "$sha1" = "`git rev-parse HEAD`" ||
                            git ls-remote origin "refs/pull/*/head" |
                            while read hash ref; do
                                if test "$hash" = "$sha1"; then
                                    git config --add remote.origin.fetch "+$ref:$ref";
                                fi
                            done'
 - git submodule update --init --depth=10

install:
 - if [[ $(uname -s) == 'Linux' ]]; then
     export PYTHONPATH=${PYTHONUSERBASE}/lib/python2.7/site-packages;
   else
     brew rm postgis --force;
     brew install postgis --force;
     pg_ctl -w start -l postgres.log --pgdata /usr/local/var/postgres;
     createuser -s postgres;
     export PYTHONPATH=${PYTHONUSERBASE}/lib/python/site-packages;
   fi
 - psql -c 'create database template_postgis;' -U postgres;
 - psql -c 'create extension postgis;' -d template_postgis -U postgres;
 - if [[ ${COVERAGE} == true ]]; then
     if [[ ! $(which pip) ]]; then easy_install --user pip && export PATH=/Users/travis/Library/Python/2.7/bin:${PATH}; fi;
     pip install --user cpp-coveralls;
   fi

script:
 - source bootstrap.sh
 - if [[ ${COVERAGE} == true ]]; then
     ./configure PGSQL2SQLITE=False SVG2PNG=False SAMPLE_INPUT_PLUGINS=False SVG_RENDERER=False BENCHMARK=${BENCH} CUSTOM_LDFLAGS='--coverage' CUSTOM_CXXFLAGS='--coverage' CUSTOM_CFLAGS='--coverage' DEBUG=True;
   elif [[ ${MASON_PUBLISH} == true ]]; then
     export MASON_NAME=mapnik;
     export MASON_VERSION=latest;
     export MASON_LIB_FILE=lib/libmapnik-wkt.a;
     source ./.mason/mason.sh;
     ./configure BENCHMARK=${BENCH} PREFIX=${MASON_PREFIX} PATH_REPLACE='' MAPNIK_BUNDLED_SHARE_DIRECTORY=True RUNTIME_LINK='static';
   else
     ./configure BENCHMARK=${BENCH};
   fi
 - SCONSFLAGS='--debug=time' make
 - make test || TEST_RESULT=$?
 - if [[ ${COVERAGE} == true ]]; then
     ./mason_packages/.link/bin/cpp-coveralls --build-root . --gcov-options '\-lp' --exclude mason_packages --exclude .sconf_temp --exclude benchmark --exclude deps --exclude scons --exclude test --exclude demo --exclude docs --exclude fonts --exclude utils > /dev/null; 
   fi
 - if [[ ${BENCH} == True ]]; then
     make bench;
   fi
 - if [[ ${TEST_RESULT:-0} != 0 ]]; then exit $TEST_RESULT ; fi;
 - if [[ ${MASON_PUBLISH} == true ]]; then
     ./mason_latest.sh build;
     ./mason_latest.sh link;
     ./mason_latest.sh publish;
   fi
